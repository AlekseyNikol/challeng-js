//ЦИКЛЫ

//Задача № 1

/* Пользователь обменивается сообщениями в чате с Мисс Марпл. Первое сообщение отправляет Мисс Марпл, второе — пользователь и так далее. Выведите беседу таким образом, чтобы сверху были самые старые сообщения, а ниже — новые.

Пример переписки:
==Вы: Привет! Мисс Марпл: Здорово, коль не шутишь!==

Повторить:
Инициализация массива.
Создание цикла.
Обход массива с помощью цикла.
Заполнение массива с помощью цикла.

Шаги по решению задачи:
1. Инициализируйте массив сообщений.
2. Заполните его следующими данными:
“Я принесла тебе утренний чай. Обычно ты еще спишь.”,
“Вы приносите мне чай по утрам?”,
“А ты как думаешь, откуда он берётся?”,
“Не знаю. Я думал, это само собой разумеющееся.”
3. Напишите цикл для вывода сообщений.
4. В зависимости от номера сообщения нужно подставлять в начало сообщения либо “Мисс Марпл”, либо “Вы”. */

const posts = [];

posts.push("Я принесла тебе утренний чай. Обычно ты еще спишь.", "Вы приносите мне чай по утрам?", "А ты как думаешь, откуда он берётся?", "Не знаю. Я думал, это само собой разумеющееся.");

for (let i = 0; i < posts.length; i++) {
    if (i % 2 === 0) {
        console.log("Мисс Марпл: " + posts[i])
    } else {
        console.log("Вы: " + posts[i])
    }
}

//Задача № 2

/* Нужно добавить функцию поиска по тексту сообщений в нашем мессенджере.

Например, пользователь ищет слово “думаешь”, и ему отображаются все сообщения с таким текстом.

Повторить:
Инициализация и использование переменных.

Шаги по решению задачи:
1. Инициализируйте переменную, в которой будет храниться искомый текст. Например, слово “чай”.
2. Для поиска воспользуйтесь методом includes для строки.
Пример использования метода для поиска слова “зелёный” в строке “чёрный чай”: "Чёрный чай".includes("зелёный"); // вернёт false.
3. Метод возвращает true, если слово есть в строке, и false, если нет.
4. Напечатайте списком все сообщения, в которых есть искомая строка. */

console.log("\n")

let word = "чай";


for (let i = 0; i < posts.length; i++) {
    if (posts[i].includes(word)) {
        console.log(posts[i])
    }
}

console.log('\n')

//Задача № 3

/* На самом деле, пользователи не всегда пишут друг другу сообщения по порядку. Но наш мессенджер пока не умеет обрабатывать ситуации, когда нам подряд прислал несколько сообщений один пользователь.

Для этого массив сообщений messages придется расширить.

Вместо строк в этом массиве мы будем хранить маленькие вложенные массивы. На первом месте в этих массивах будет автор, а на втором — сообщение: [автор, сообщение].

Повторить:

Инициализация массива;
Обход массива с помощью цикла.
Шаги по решению задачи:

1. Создайте новый массив messages.
2. Заполните его новой структурой:
[“zloy-zloy”, “Мы с Алешей сегодня на иксбоксе рубились, потом в маке поели, потом ему новый телефон купили, и два часа с горок в Нескучном саду катались.”],
[“zloy-zloy”, “У Алеши завтра День рождения.”],
[“zloy-zloy”, “Он мой дед. Ему будет 81 год.”],
[“Вы”, “LOL.”]
3. Создайте цикл для печати сообщения. В результате в консоль должен быть выведен чат, каждая строка которого соответствует шаблону автор: сообщение. */

let messages = [["zloy-zloy", "Мы с Алешей сегодня на иксбоксе рубились, потом в маке поели, потом ему новый телефон купили, и два часа с горок в Нескучном саду катались."], ["zloy-zloy", "У Алеши завтра День рождения."], ["zloy-zloy", "Он мой дед. Ему будет 81 год."], ["Вы", "LOL."]];


for (let i = 0; i < messages.length; i++) {
    console.log(`${messages[i][0]} : ${messages[i][1]}`)
}